package ArchivosCodigo;
import java.io.*;
import java_cup.runtime.*;
import java.util.*;
import javax.swing.JOptionPane;


action code{:
/*
static Stack pilaCodigo= new Stack();
static Stack erroresCodigo= new Stack();
*/
:}
parser code
{:
/**Metodo al que se llama automáticamente ante algún error sintactico.*/
public void syntax_error(Symbol s){
System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ " Identificador " +s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}

:}

terminal Tk_import,Tk_abrir,Tk_comillas,Tk_ruta,Tk_puntoComa,Tk_public,Tk_private,Tk_protect,Tk_clase,Tk_name;  
terminal Tk_heredar,Tk_open,Tk_DobleB,Tk_Comentario,Tk_OpenC,Tk_string,Tk_double,Tk_bool,Tk_int,Tk_char,Tk_void ;
terminal Tk_NameVar,Tk_puntoComa,Tk_Coma,Tk_suma,Tk_resta,Tk_div,Tk_multi,Tk_plus,Tk_minus,Tk_mayor,Tk_menor,Tk_mayorq;
terminal Tk_menorq,Tk_igualIgual,Tk_dif,Tk_Abrir,Tk_Cerrar,Tk_Not,Tk_Or,Tk_xOr,Tk_And,Tk_Comillas,Tk_Open,Tk_Close,Tk_Coma;
terminal Tk_Igual,Tk_print,Tk_mientras,Tk_true,Tk_false,Tk_Asig,Tk_puntoComa,Tk_Super,Tk_Over,Tk_new,Tk_Firts,Tk_Si;
terminal Tk_SiNoSi,Tk_SiNo,Tk_Inter,Tk_Caso,Tk_Defec,Tk_Mientras,Tk_Hacer,TK_Continuar,Tk_Exit; 

non terminal Linea0,Linea1,Linea2,Linea3;
non terminal LineaComen,LineaVar,LineaVar1,LineaOpera,LineaRela,LineaAgrupa,LineaLog,LineaGen,LineaAsig,LineaMetod,LineaSente,LineaVisi;

start with Linea0;

//importacion
Linea0::= Tk_import  Tk_abrir Tk_comillas Tk_ruta Tk_comillas Tk_puntoComa Linea1
         |Linea1 //archivos de importacion
         |LineaComen Linea0;
//visibilidad
LineaVisi::= Tk_public Linea2
         |Tk_private Linea2
         |Tk_protect Linea2;

//Clase y Heredad
LineaCyH::= Tk_heredar
           |Tk_clase;



//Comentarios

LineaComen::= Tk_DobleB Tk_Comentario ; //Comentario Simple
             |Tk_OpenC Tk_Comentario Tk_DobleB; //Comentario Doble



//Tipo de Datos

LineaVar::=Tk_string
         |Tk_double 
         |Tk_bool 
         |Tk_int 
         |Tk_char 
         |Tk_void ;
         
//Variable
LineaVar1::=Tk_NameVar Tk_puntoComa 
           |Tk_NameVar Tk_Coma LineaVar1;

//Operaciones Aritmeticas

LineaOpera::=Tk_suma
            |Tk_resta
            |Tk_div
            |Tk_multi
            |Tk_plus
            |Tk_minus;

//Operaciones Relacionales

LineaRela::=Tk_mayor    
           |Tk_menor
           |Tk_mayorq
           |Tk_menorq
           |Tk_igualIgual
           |Tk_dif;

//Signos de Agrupacion

LineaAgrupa::=Tk_Abrir
             |Tk_Cerrar;

//Operaciones Logicas

LineaLog::=Tk_Not
          |Tk_Or
          |Tk_xOr
          |Tk_And;

//Componentes Generales

LineaGen::=Tk_Comillas
          |Tk_Open
          |Tk_Close
          |Tk_Coma
          |Tk_Igual
          |Tk_print
          |Tk_mientras
          |Tk_true
          |Tk_false;

//Caracter de Asignacion

LineaAsig::=Tk_Asig
           |Tk_puntoComa;

//Metodos y mas

LineaMetod::= Tk_Super
            |Tk_Over
            |Tk_new
            |Tk_Firts;

LineaSente::=Tk_Si
            |Tk_SiNoSi
            |Tk_SiNo
            |Tk_Inter
            |Tk_Caso
            |Tk_Defec
            |Tk_Mientras
            |Tk_Hacer
            |TK_Continuar
            |Tk_Exit;
/*
*
*Area de Operaciones se comenzo en Linea0
*
*
*/

Linea1::= LineaVisi Tk_name LineaCyH Tk_name LineaGen Linea2
        |LineaVisi Tk_name LineaGen Linea2

Linea2::=LineaSente LineasAgrupacion 











