package ArchivosCodigo;
import java.io.*;
import java_cup.runtime.*;
import java.util.*;
import javax.swing.JOptionPane;


action code{:
/*
public static Stack pilaCodigo= new Stack();
public static Stack erroresCodigo= new Stack();
public static Stack programa= new Stack();

*/
public void datos(Object copiado){
programa.push(copiado);

}

:}
parser code
{:
/**Metodo al que se llama automáticamente ante algún error sintactico.*/
public void syntax_error(Symbol s){
System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ " Identificador " +s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}

:}

terminal Tk_import,Tk_pote,Tk_abrir,Tk_ruta,Tk_public,Tk_private,Tk_protect,Tk_clase,Tk_name,Tk_Puntos;  
terminal Tk_heredar,Tk_DobleB,Tk_Comentario,Tk_OpenC,Tk_string,Tk_double,Tk_bool,Tk_int,Tk_char,Tk_void ;
terminal Tk_suma,Tk_resta,Tk_div,Tk_multi,Tk_plus,Tk_minus,Tk_mayor,Tk_menor,Tk_mayorq;
terminal Tk_menorq,Tk_igualIgual,Tk_dif,Tk_Abrir,Tk_Cerrar,Tk_Not,Tk_Or,Tk_xOr,Tk_And,Tk_Comillas,Tk_Open,Tk_Close,Tk_Coma;
terminal Tk_Igual,Tk_print,Tk_mientras,Tk_true,Tk_false,Tk_Asig,Tk_puntoComa,Tk_Super,Tk_Over,Tk_new,Tk_Firts,Tk_Si;
terminal Tk_CloseC,Tk_Dosp,Tk_SiNoSi,Tk_SiNo,Tk_Inter,Tk_Caso,Tk_Defec,Tk_Mientras,Tk_Hacer,Tk_Exit,Tk_return,Tk_Continuar,Tk_Error; 


non terminal Linea0,Linea1,Linea2,Linea3,Linea4,Linea5,Linea6,Linea7,Linea8,Linea9,Linea10,Operaciones,Comparacion,Operaciones2;
non terminal LineaComen,LineaVar,LineaVar1,LineaConta,LineaOpera,LineaRela,LineaAgrupa,LineaLog,LineaGen,LineaAsig,LineaMetod,LineaVisi,LineaCyH;
non terminal LineaSenteSi,LineaSenteCaso,LineaSenteMien,LineaSenteConti,LineaVar2,LineaComen2;

precedence left Tk_new, Tk_suma, Tk_resta, Tk_Or;
precedence left Tk_div, Tk_multi,Tk_xOr;
precedence left Tk_pote, Tk_And;
precedence left Tk_plus, Tk_minus, Tk_Not;
precedence left Tk_name , Tk_Puntos;




start with Linea0;

//importacion
Linea0::= Tk_import:t{:datos(t);:}  LineaAgrupa Tk_Comillas:a {:datos(a);:} Tk_name:b{:datos(b);:} Tk_Comillas:c {:datos(c);:} LineaAgrupa Tk_puntoComa:e{:datos(e);:} Linea0
         |Linea1 //archivos de importacion
         |LineaComen Linea0;

/*
*
*Declaraciones de  no terminales a usar
*
*/
//visibilidad
LineaVisi::= Tk_public:t {:datos(t);:} 
         |Tk_private:t {:datos(t);:} 
         |Tk_protect:t {:datos(t);:} ;

//Clase y Heredad
LineaCyH::= Tk_heredar:t {:datos(t);:}
           |Tk_clase:t {:datos(t);:};



//Comentarios

LineaComen::= Tk_DobleB:a Tk_Comentario:t {:datos(a);datos(t);:}  //Comentario Simple
             |Tk_OpenC:a LineaComen2 Tk_CloseC:c  {:datos(a);datos(c);:}; //Comentario Doble

LineaComen2::=Tk_Comentario:t{:datos(t);:} LineaComen2
              |Tk_multi:t{:datos(t);:} LineaComen2
              |Tk_multi:t{:datos(t);:} Tk_name:a{:datos(a);:} LineaComen2
              |;
              


//Tipo de Datos

LineaVar::=Tk_string:t {:datos(t);:}
         |Tk_double:t {:datos(t);:} 
         |Tk_bool:t {:datos(t);:} 
         |Tk_int:t {:datos(t);:} 
         |Tk_char:t {:datos(t);:} 
         |Tk_void:t {:datos(t);:} ;
         
//Variable
LineaVar1::=Tk_name:a Tk_puntoComa:t {:datos(a);datos(t);:} 
           |Tk_name:a{:datos(a);:}  Tk_Coma:t{:datos(t);:} LineaVar1 
           |Tk_name:a{:datos(a);:} Tk_Asig:t{:datos(t);:} LineaVar2  
           |LineaVisi LineaVar1;
LineaVar2::= Tk_new:a{:datos(a);:} Tk_Comentario:c{:datos(c);:} LineaAgrupa Tk_name:t{:datos(t);:} LineaAgrupa
            |;
            

//Operaciones Aritmeticas

LineaOpera::=Tk_suma:t {:datos(t);:}
            |Tk_resta:t {:datos(t);:}
            |Tk_div:t {:datos(t);:}
            |Tk_pote:t {:datos(t);:}
            |Tk_multi:t {:datos(t);:};

LineaConta::= Tk_name:a Tk_plus:c Tk_puntoComa:t {:datos(a);datos(c);datos(t);:} 
            |Tk_name:a Tk_minus:c Tk_puntoComa:t {:datos(a);datos(c);datos(t);:};

//Operaciones Relacionales

LineaRela::=Tk_mayor:t {:datos(t);:}    
           |Tk_menor:t {:datos(t);:}
           |Tk_mayorq:t {:datos(t);:}
           |Tk_menorq:t {:datos(t);:}
           |Tk_igualIgual:t {:datos(t);:}
           |Tk_dif:t {:datos(t);:}
           |LineaLog;

//Signos de Agrupacion

LineaAgrupa::=Tk_Abrir:t {:datos(t);:}
             |Tk_Cerrar:t {:datos(t);:}
             |Tk_Dosp:t {:datos(t);:};

//Operaciones Logicas

LineaLog::=Tk_Not:t {:datos(t);:}
          |Tk_Or:t {:datos(t);:}
          |Tk_xOr:t {:datos(t);:}
          |Tk_And:t {:datos(t);:};

//Componentes Generales

LineaGen::=Tk_Comillas:t {:datos(t);:}
          |Tk_Open:t {:datos(t);:}
          |Tk_Close:t {:datos(t);:}
          |Tk_Coma:t {:datos(t);:}
          |Tk_Igual:t {:datos(t);:}
          |Tk_mientras:t {:datos(t);:}
          |Tk_true:t {:datos(t);:}
          |Tk_false:t {:datos(t);:};

//Caracter de Asignacion

LineaAsig::=Tk_name:a Tk_Asig:t {:datos(a);datos(t);:}
           |Tk_puntoComa:t {:datos(t);:};

//Metodos y mas

LineaMetod::= Tk_Super:t {:datos(t);:}
            |Tk_Over:t {:datos(t);:}
            |Tk_new:t {:datos(t);:}
            |Tk_Firts:t {:datos(t);:}
            |;

LineaSenteSi::=Tk_Si:t {:datos(t);:}
            |Tk_SiNoSi:t {:datos(t);:}
            |Tk_SiNo:t {:datos(t);:};
            
LineaSenteCaso::=Tk_Inter:t {:datos(t);:}
                |Tk_Caso:t {:datos(t);:}
                |Tk_Defec:t {:datos(t);:};

LineaSenteMien::=Tk_Mientras:t {:datos(t);:}
                |Tk_Hacer:t {:datos(t);:};

LineaSenteConti::=Tk_Continuar:t{:datos(t);:} LineaAsig 
                |Tk_Exit:t {:datos(t);:} LineaAsig ;
/*
*
*Area de Desarrollo de la gramatica se comenzo en Linea0
*
*
*/

Linea1::= LineaVisi LineaCyH Tk_name:t{:datos(t);:} LineaCyH Tk_name:a{:datos(a);:} LineaGen Linea2 LineaGen {:JOptionPane.showMessageDialog(null, "Copilacion Exitosa ", "Copilacion", JOptionPane.WARNING_MESSAGE);:}
         |LineaVisi LineaVar Tk_name:t{:datos(t);:} LineaAgrupa LineaAgrupa LineaGen Linea2 LineaGen
         ; 

Linea2::= LineaSenteSi LineaAgrupa Tk_name:t{:datos(t);:} LineaRela Tk_name:a{:datos(a);:} LineaAgrupa  LineaGen Linea2 LineaGen Linea2 //Linea funciones        
         |LineaSenteSi LineaGen Linea2 LineaGen Linea2
         |LineaSenteCaso LineaAgrupa Operaciones2 LineaAgrupa LineaGen Linea3 LineaGen  //If,While
         |LineaSenteCaso LineaAgrupa Linea2
         |LineaMetod LineaAgrupa Tk_name:t{:datos(t);:} LineaAgrupa LineaAsig // Metodos  
         |LineaMetod Tk_name:t {:datos(t);:} //llamar metodo
         |Linea1 //Si hay otro funcion
         |LineaComen Linea2 //Comentario
         |LineaVar LineaVar1 Linea2 //variables
         |Operaciones Linea2
         |LineaSenteConti Linea3
         |LineaSenteMien LineaAgrupa Tk_name:t{:datos(t);:} LineaRela Tk_name:a{:datos(a);:} LineaAgrupa  LineaGen Linea2 LineaGen Linea2  
         |LineaSenteMien LineaGen Linea2 LineaGen Linea2 
         |Linea8
         |LineaAsig Linea2
         |Linea3        
         |Tk_print:t {:datos(t);:} LineaAgrupa LineaGen Tk_name:a {:datos(a);:} LineaGen LineaAgrupa Tk_puntoComa:c {:datos(c);:} Linea2
         |;

Linea3::=LineaSenteCaso  Tk_name:t{:datos(t);:} Tk_Dosp:a{:datos(a);:} Linea2;//If,While

/*
*
* Operaciones suma resta multi div
*/

Operaciones::= Tk_Puntos:t Linea6 {:datos(t);:} ;
              
              

Linea6::=LineaOpera Linea7;

Linea7::=Tk_Puntos:t Linea6  {:datos(t);:}
        |Tk_Puntos:t Tk_puntoComa:a {:datos(t);datos(a);:} 
        ;

Operaciones2::=Tk_Puntos:t {:datos(t);:} Linea8
              |Tk_name:t {:datos(t);:} Linea8;
Linea8::=LineaOpera Linea9;

Linea9::=Tk_Puntos:t {:datos(t);:} Linea8
        |Tk_name:t {:datos(t);:} Linea8
        |Tk_name:t {:datos(t);:}
        |Tk_Puntos:t {:datos(t);:};
        
/*
*
*
*/

Linea10::= Tk_name:t{:datos(t);:} LineaAgrupa Tk_Puntos:a{:datos(a);:} LineaAgrupa LineaGen Linea2 LineaGen;//metodos



//Comparacion::= Tk_name:t LineaLog Tk_name:a {:datos(t);datos(a);:}; //comparaciones










