package ArchivosCodigo;
import java.io.*;
import java_cup.runtime.*;
import java.util.*;
import javax.swing.JOptionPane;


action code{:
/*
static Stack pilaCodigo= new Stack();
static Stack erroresCodigo= new Stack();
*/
:}
parser code
{:
/**Metodo al que se llama automáticamente ante algún error sintactico.*/
public void syntax_error(Symbol s){
System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ " Identificador " +s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}

:}

terminal Tk_import,Tk_pote,Tk_abrir,Tk_ruta,Tk_public,Tk_private,Tk_protect,Tk_clase,Tk_name,Tk_Puntos;  
terminal Tk_heredar,Tk_DobleB,Tk_Comentario,Tk_OpenC,Tk_string,Tk_double,Tk_bool,Tk_int,Tk_char,Tk_void ;
terminal Tk_suma,Tk_resta,Tk_div,Tk_multi,Tk_plus,Tk_minus,Tk_mayor,Tk_menor,Tk_mayorq;
terminal Tk_menorq,Tk_igualIgual,Tk_dif,Tk_Abrir,Tk_Cerrar,Tk_Not,Tk_Or,Tk_xOr,Tk_And,Tk_Comillas,Tk_Open,Tk_Close,Tk_Coma;
terminal Tk_Igual,Tk_print,Tk_mientras,Tk_true,Tk_false,Tk_Asig,Tk_puntoComa,Tk_Super,Tk_Over,Tk_new,Tk_Firts,Tk_Si;
terminal Tk_CloseC,Tk_Dosp,Tk_SiNoSi,Tk_SiNo,Tk_Inter,Tk_Caso,Tk_Defec,Tk_Mientras,Tk_Hacer,TK_Continuar,Tk_Exit,Tk_return,Tk_Continuar,Tk_Error; 


non terminal Linea0,Linea1,Linea2,Linea3,Linea4,Linea5,Linea6,Linea7,Linea8,Linea9,Operaciones,Comparacion,Operaciones2;
non terminal LineaComen,LineaVar,LineaVar1,LineaConta,LineaOpera,LineaRela,LineaAgrupa,LineaLog,LineaGen,LineaAsig,LineaMetod,LineaVisi,LineaCyH;
non terminal LineaSenteSi,LineaSenteCaso,LineaSenteMien,LineaSenteConti,LineaVar2;

precedence left Tk_new, Tk_suma, Tk_resta, Tk_Or;
precedence left Tk_div, Tk_multi,Tk_xOr;
precedence left Tk_pote, Tk_And;
precedence left Tk_plus, Tk_minus, Tk_Not;
precedence left Tk_name , Tk_Puntos;




start with Linea0;

//importacion
Linea0::= Tk_import  LineaAgrupa Tk_Comillas Tk_name Tk_Comillas LineaAgrupa Tk_puntoComa Linea1
         |Linea1 //archivos de importacion
         |LineaComen Linea0;

/*
*
*Declaraciones de  no terminales a usar
*
*/
//visibilidad
LineaVisi::= Tk_public 
         |Tk_private 
         |Tk_protect ;

//Clase y Heredad
LineaCyH::= Tk_heredar
           |Tk_clase;



//Comentarios

LineaComen::= Tk_DobleB Tk_name  //Comentario Simple
             |Tk_OpenC Tk_name Tk_CloseC; //Comentario Doble



//Tipo de Datos

LineaVar::=Tk_string
         |Tk_double 
         |Tk_bool 
         |Tk_int 
         |Tk_char 
         |Tk_void ;
         
//Variable
LineaVar1::=Tk_name Tk_puntoComa 
           |Tk_name  Tk_Coma LineaVar1
           |Tk_name Tk_Asig LineaVar2
           |LineaVisi LineaVar1;
LineaVar2::= Tk_new Tk_name LineaAgrupa Tk_name LineaAgrupa
            |;
            

//Operaciones Aritmeticas

LineaOpera::=Tk_suma
            |Tk_resta
            |Tk_div
            |Tk_pote
            |Tk_multi;

LineaConta::= Tk_name Tk_plus Tk_puntoComa 
            |Tk_name Tk_minus Tk_puntoComa;

//Operaciones Relacionales

LineaRela::=Tk_mayor    
           |Tk_menor
           |Tk_mayorq
           |Tk_menorq
           |Tk_igualIgual
           |Tk_dif
           |LineaLog;

//Signos de Agrupacion

LineaAgrupa::=Tk_Abrir
             |Tk_Cerrar;

//Operaciones Logicas

LineaLog::=Tk_Not
          |Tk_Or
          |Tk_xOr
          |Tk_And;

//Componentes Generales

LineaGen::=Tk_Comillas
          |Tk_Open
          |Tk_Close
          |Tk_Coma
          |Tk_Igual
          |Tk_mientras
          |Tk_true
          |Tk_false;

//Caracter de Asignacion

LineaAsig::=Tk_Asig
           |Tk_puntoComa;

//Metodos y mas

LineaMetod::= Tk_Super
            |Tk_Over
            |Tk_new
            |Tk_Firts
            |;

LineaSenteSi::=Tk_Si
            |Tk_SiNoSi
            |Tk_SiNo;
            
LineaSenteCaso::=Tk_Inter
                |Tk_Caso
                |Tk_Defec;

LineaSenteMien::=Tk_Mientras
                |Tk_Hacer;

LineaSenteConti::=TK_Continuar
                |Tk_Exit;
/*
*
*Area de Desarrollo de la gramatica se comenzo en Linea0
*
*
*/

Linea1::= LineaVisi LineaCyH Tk_name LineaCyH Tk_name LineaGen Linea2 LineaGen {:JOptionPane.showMessageDialog(null, "Copilacion Exitosa ", "Copilacion", JOptionPane.WARNING_MESSAGE);:}
         |LineaVisi LineaVar Tk_name LineaAgrupa LineaAgrupa LineaGen Linea2 LineaGen;

Linea2::= LineaSenteSi LineaAgrupa Tk_name LineaRela Tk_name LineaAgrupa  LineaGen Linea2 LineaGen Linea2 //Linea funciones        
         |LineaSenteSi LineaGen Linea2 LineaGen Linea2
         |LineaSenteCaso LineaAgrupa Operaciones2 LineaAgrupa LineaGen Linea3 LineaGen  //If,While
         |LineaMetod LineaAgrupa Tk_name LineaAgrupa LineaAsig // Metodos
         |LineaMetod Tk_name //llamar metodo
         |Linea1 //Si hay otro funcion
         |LineaComen Linea2 //Comentario
         |LineaVar LineaVar1 Linea2 //variables
         |Operaciones Linea2
         |LineaSenteConti
         |LineaSenteMien LineaAgrupa Tk_name LineaRela Tk_name LineaAgrupa  LineaGen Linea2 LineaGen Linea2
         |LineaSenteMien LineaGen Linea2 LineaGen Linea2 
         |Linea8
         |Linea3
         |Tk_print LineaAgrupa LineaGen Tk_name LineaGen LineaAgrupa Tk_puntoComa
         |;

Linea3::=LineaSenteCaso  Tk_name Tk_Dosp Linea2;//If,While

/*
*
* Operaciones suma resta multi div
*/

Operaciones::= Tk_Puntos Linea6 ;
              
              

Linea6::=LineaOpera Linea7;

Linea7::=Tk_Puntos Linea6
        |Tk_Puntos Tk_puntoComa 
        ;

Operaciones2::=Tk_Puntos Linea8
              |Tk_name Linea8;
Linea8::=LineaOpera Linea9;

Linea9::=Tk_Puntos Linea8
        |Tk_name Linea8
        |Tk_name
        |Tk_Puntos;
        
/*
*
*
*/

Linea8::= Tk_name LineaAgrupa Tk_Puntos LineaAgrupa LineaGen Linea2 LineaGen;//metodos



//Comparacion::= Tk_name LineaLog Tk_name; //comparaciones










