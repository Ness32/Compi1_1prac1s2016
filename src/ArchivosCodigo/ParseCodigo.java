
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Feb 16 22:37:17 CST 2016
//----------------------------------------------------

package ArchivosCodigo;

import static ArchivosCodigo.ParseCodigo.programa;
import java.io.*;
import java_cup.runtime.*;
import java.util.*;
import javax.swing.JOptionPane;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Feb 16 22:37:17 CST 2016
  */
public class ParseCodigo extends java_cup.runtime.lr_parser {
    public static Stack programa= new Stack();

  /** Default constructor. */
  public ParseCodigo() {super();}

  /** Constructor which sets the default scanner. */
  public ParseCodigo(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParseCodigo(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\214\000\002\002\004\000\002\042\002\000\002\043" +
    "\002\000\002\044\002\000\002\045\002\000\002\046\002" +
    "\000\002\002\017\000\002\002\003\000\002\002\004\000" +
    "\002\032\003\000\002\032\003\000\002\032\003\000\002" +
    "\033\003\000\002\033\003\000\002\017\004\000\002\017" +
    "\005\000\002\047\002\000\002\041\005\000\002\050\002" +
    "\000\002\041\005\000\002\051\002\000\002\052\002\000" +
    "\002\041\007\000\002\041\002\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\021\004\000\002\053\002" +
    "\000\002\054\002\000\002\021\007\000\002\055\002\000" +
    "\002\056\002\000\002\021\007\000\002\021\004\000\002" +
    "\057\002\000\002\060\002\000\002\061\002\000\002\040" +
    "\012\000\002\040\002\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\022\005\000\002\022\005\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\024\003\000\002\025\003" +
    "\000\002\025\003\000\002\026\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\027\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\030\004\000\002\030\003\000\002\031\003\000" +
    "\002\031\003\000\002\031\003\000\002\031\003\000\002" +
    "\031\002\000\002\034\003\000\002\034\003\000\002\034" +
    "\003\000\002\035\003\000\002\035\003\000\002\035\003" +
    "\000\002\036\003\000\002\036\003\000\002\062\002\000" +
    "\002\037\005\000\002\063\002\000\002\037\005\000\002" +
    "\064\002\000\002\065\002\000\002\003\014\000\002\066" +
    "\002\000\002\003\013\000\002\067\002\000\002\070\002" +
    "\000\002\004\016\000\002\004\007\000\002\004\011\000" +
    "\002\071\002\000\002\004\010\000\002\004\004\000\002" +
    "\004\003\000\002\004\004\000\002\004\005\000\002\004" +
    "\004\000\002\004\004\000\002\072\002\000\002\073\002" +
    "\000\002\004\016\000\002\004\007\000\002\004\003\000" +
    "\002\004\004\000\002\004\003\000\002\074\002\000\002" +
    "\075\002\000\002\004\013\000\002\004\002\000\002\076" +
    "\002\000\002\077\002\000\002\005\010\000\002\014\004" +
    "\000\002\010\004\000\002\011\004\000\002\011\004\000" +
    "\002\100\002\000\002\016\005\000\002\101\002\000\002" +
    "\016\005\000\002\012\004\000\002\102\002\000\002\013" +
    "\005\000\002\103\002\000\002\013\005\000\002\013\003" +
    "\000\002\013\003\000\002\104\002\000\002\105\002\000" +
    "\002\012\013" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\354\000\016\004\006\010\014\011\015\012\004\017" +
    "\013\021\012\001\002\000\032\010\ufff6\011\ufff6\012\ufff6" +
    "\013\ufff6\014\ufff6\016\ufff6\022\ufff6\023\ufff6\024\ufff6\025" +
    "\ufff6\026\ufff6\027\ufff6\001\002\000\022\013\064\016\062" +
    "\022\053\023\057\024\060\025\054\026\056\027\061\001" +
    "\002\000\006\044\000\045\000\001\002\000\016\004\006" +
    "\010\014\011\015\012\004\017\013\021\012\001\002\000" +
    "\004\002\ufffa\001\002\000\004\002\033\001\002\000\010" +
    "\020\020\033\017\072\uffea\001\002\000\004\020\016\001" +
    "\002\000\032\010\ufff8\011\ufff8\012\ufff8\013\ufff8\014\ufff8" +
    "\016\ufff8\022\ufff8\023\ufff8\024\ufff8\025\ufff8\026\ufff8\027" +
    "\ufff8\001\002\000\032\010\ufff7\011\ufff7\012\ufff7\013\ufff7" +
    "\014\ufff7\016\ufff7\022\ufff7\023\ufff7\024\ufff7\025\ufff7\026" +
    "\ufff7\027\ufff7\001\002\000\134\004\ufff3\005\ufff3\010\ufff3" +
    "\011\ufff3\012\ufff3\014\ufff3\015\ufff3\017\ufff3\021\ufff3\022" +
    "\ufff3\023\ufff3\024\ufff3\025\ufff3\026\ufff3\027\ufff3\030\ufff3" +
    "\031\ufff3\032\ufff3\033\ufff3\044\ufff3\045\ufff3\052\ufff3\053" +
    "\ufff3\054\ufff3\055\ufff3\056\ufff3\057\ufff3\060\ufff3\061\ufff3" +
    "\062\ufff3\064\ufff3\065\ufff3\066\ufff3\067\ufff3\070\ufff3\071" +
    "\ufff3\074\ufff3\075\ufff3\076\ufff3\077\ufff3\100\ufff3\101\ufff3" +
    "\102\ufff3\103\ufff3\104\ufff3\001\002\000\012\014\uffed\020" +
    "\uffef\033\uffef\072\uffef\001\002\000\010\020\ufff1\033\ufff1" +
    "\072\ufff1\001\002\000\004\072\022\001\002\000\134\004" +
    "\ufff2\005\ufff2\010\ufff2\011\ufff2\012\ufff2\014\ufff2\015\ufff2" +
    "\017\ufff2\021\ufff2\022\ufff2\023\ufff2\024\ufff2\025\ufff2\026" +
    "\ufff2\027\ufff2\030\ufff2\031\ufff2\032\ufff2\033\ufff2\044\ufff2" +
    "\045\ufff2\052\ufff2\053\ufff2\054\ufff2\055\ufff2\056\ufff2\057" +
    "\ufff2\060\ufff2\061\ufff2\062\ufff2\064\ufff2\065\ufff2\066\ufff2" +
    "\067\ufff2\070\ufff2\071\ufff2\074\ufff2\075\ufff2\076\ufff2\077" +
    "\ufff2\100\ufff2\101\ufff2\102\ufff2\103\ufff2\104\ufff2\001\002" +
    "\000\010\020\020\033\017\072\uffea\001\002\000\004\072" +
    "\ufff0\001\002\000\004\014\030\001\002\000\010\020\020" +
    "\033\017\072\uffea\001\002\000\004\072\uffee\001\002\000" +
    "\010\020\uffec\033\uffec\072\uffec\001\002\000\010\020\020" +
    "\033\017\072\uffea\001\002\000\004\072\uffeb\001\002\000" +
    "\004\002\001\001\002\000\004\002\ufff9\001\002\000\006" +
    "\044\036\045\037\001\002\000\132\005\uffc8\010\uffc8\011" +
    "\uffc8\012\uffc8\014\uffc8\015\uffc8\017\uffc8\021\uffc8\022\uffc8" +
    "\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030\uffc8\031" +
    "\uffc8\032\uffc8\033\uffc8\044\uffc8\045\uffc8\052\uffc8\053\uffc8" +
    "\054\uffc8\055\uffc8\056\uffc8\057\uffc8\060\uffc8\061\uffc8\062" +
    "\uffc8\064\uffc8\065\uffc8\066\uffc8\067\uffc8\070\uffc8\071\uffc8" +
    "\074\uffc8\075\uffc8\076\uffc8\077\uffc8\100\uffc8\101\uffc8\102" +
    "\uffc8\103\uffc8\104\uffc8\001\002\000\132\005\uffc7\010\uffc7" +
    "\011\uffc7\012\uffc7\014\uffc7\015\uffc7\017\uffc7\021\uffc7\022" +
    "\uffc7\023\uffc7\024\uffc7\025\uffc7\026\uffc7\027\uffc7\030\uffc7" +
    "\031\uffc7\032\uffc7\033\uffc7\044\uffc7\045\uffc7\052\uffc7\053" +
    "\uffc7\054\uffc7\055\uffc7\056\uffc7\057\uffc7\060\uffc7\061\uffc7" +
    "\062\uffc7\064\uffc7\065\uffc7\066\uffc7\067\uffc7\070\uffc7\071" +
    "\uffc7\074\uffc7\075\uffc7\076\uffc7\077\uffc7\100\uffc7\101\uffc7" +
    "\102\uffc7\103\uffc7\104\uffc7\001\002\000\004\052\041\001" +
    "\002\000\004\014\uffff\001\002\000\004\014\043\001\002" +
    "\000\004\052\ufffe\001\002\000\004\052\045\001\002\000" +
    "\006\044\ufffd\045\ufffd\001\002\000\006\044\036\045\037" +
    "\001\002\000\004\064\050\001\002\000\016\004\ufffc\010" +
    "\ufffc\011\ufffc\012\ufffc\017\ufffc\021\ufffc\001\002\000\016" +
    "\004\006\010\014\011\015\012\004\017\013\021\012\001" +
    "\002\000\004\002\ufffb\001\002\000\012\010\uffe9\011\uffe9" +
    "\012\uffe9\014\uffe9\001\002\000\012\010\uffe6\011\uffe6\012" +
    "\uffe6\014\uffe6\001\002\000\004\014\347\001\002\000\012" +
    "\010\uffe5\011\uffe5\012\uffe5\014\uffe5\001\002\000\012\010" +
    "\uffe8\011\uffe8\012\uffe8\014\uffe8\001\002\000\012\010\uffe7" +
    "\011\uffe7\012\uffe7\014\uffe7\001\002\000\012\010\uffe4\011" +
    "\uffe4\012\uffe4\014\uffe4\001\002\000\004\014\ufff5\001\002" +
    "\000\004\014\065\001\002\000\004\014\ufff4\001\002\000" +
    "\006\044\uffa4\045\uffa4\001\002\000\006\044\036\045\037" +
    "\001\002\000\006\044\036\045\037\001\002\000\022\052" +
    "\072\053\071\054\077\055\076\056\100\060\075\061\074" +
    "\062\101\001\002\000\134\002\uffc1\005\uffc1\010\uffc1\011" +
    "\uffc1\012\uffc1\014\uffc1\015\uffc1\017\uffc1\021\uffc1\022\uffc1" +
    "\023\uffc1\024\uffc1\025\uffc1\026\uffc1\027\uffc1\030\uffc1\031" +
    "\uffc1\032\uffc1\033\uffc1\044\uffc1\045\uffc1\052\uffc1\053\uffc1" +
    "\054\uffc1\055\uffc1\056\uffc1\057\uffc1\060\uffc1\061\uffc1\062" +
    "\uffc1\064\uffc1\065\uffc1\066\uffc1\067\uffc1\070\uffc1\071\uffc1" +
    "\074\uffc1\075\uffc1\076\uffc1\077\uffc1\100\uffc1\101\uffc1\102" +
    "\uffc1\103\uffc1\104\uffc1\001\002\000\134\002\uffc2\005\uffc2" +
    "\010\uffc2\011\uffc2\012\uffc2\014\uffc2\015\uffc2\017\uffc2\021" +
    "\uffc2\022\uffc2\023\uffc2\024\uffc2\025\uffc2\026\uffc2\027\uffc2" +
    "\030\uffc2\031\uffc2\032\uffc2\033\uffc2\044\uffc2\045\uffc2\052" +
    "\uffc2\053\uffc2\054\uffc2\055\uffc2\056\uffc2\057\uffc2\060\uffc2" +
    "\061\uffc2\062\uffc2\064\uffc2\065\uffc2\066\uffc2\067\uffc2\070" +
    "\uffc2\071\uffc2\074\uffc2\075\uffc2\076\uffc2\077\uffc2\100\uffc2" +
    "\101\uffc2\102\uffc2\103\uffc2\104\uffc2\001\002\000\132\005" +
    "\124\010\014\011\015\012\004\014\130\015\144\017\013" +
    "\021\012\022\053\023\057\024\060\025\054\026\056\027" +
    "\061\030\121\031\142\032\146\033\123\044\uffb4\045\uffb4" +
    "\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056\uff8b\057\127\060" +
    "\uff8b\061\uff8b\062\uff8b\064\115\065\104\066\103\067\105" +
    "\070\122\071\132\074\117\075\131\076\116\077\102\100" +
    "\141\101\111\102\113\103\106\104\114\001\002\000\134" +
    "\002\uffbc\005\uffbc\010\uffbc\011\uffbc\012\uffbc\014\uffbc\015" +
    "\uffbc\017\uffbc\021\uffbc\022\uffbc\023\uffbc\024\uffbc\025\uffbc" +
    "\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032\uffbc\033\uffbc\044" +
    "\uffbc\045\uffbc\052\uffbc\053\uffbc\054\uffbc\055\uffbc\056\uffbc" +
    "\057\uffbc\060\uffbc\061\uffbc\062\uffbc\064\uffbc\065\uffbc\066" +
    "\uffbc\067\uffbc\070\uffbc\071\uffbc\074\uffbc\075\uffbc\076\uffbc" +
    "\077\uffbc\100\uffbc\101\uffbc\102\uffbc\103\uffbc\104\uffbc\001" +
    "\002\000\134\002\uffbd\005\uffbd\010\uffbd\011\uffbd\012\uffbd" +
    "\014\uffbd\015\uffbd\017\uffbd\021\uffbd\022\uffbd\023\uffbd\024" +
    "\uffbd\025\uffbd\026\uffbd\027\uffbd\030\uffbd\031\uffbd\032\uffbd" +
    "\033\uffbd\044\uffbd\045\uffbd\052\uffbd\053\uffbd\054\uffbd\055" +
    "\uffbd\056\uffbd\057\uffbd\060\uffbd\061\uffbd\062\uffbd\064\uffbd" +
    "\065\uffbd\066\uffbd\067\uffbd\070\uffbd\071\uffbd\074\uffbd\075" +
    "\uffbd\076\uffbd\077\uffbd\100\uffbd\101\uffbd\102\uffbd\103\uffbd" +
    "\104\uffbd\001\002\000\134\002\uffbf\005\uffbf\010\uffbf\011" +
    "\uffbf\012\uffbf\014\uffbf\015\uffbf\017\uffbf\021\uffbf\022\uffbf" +
    "\023\uffbf\024\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031" +
    "\uffbf\032\uffbf\033\uffbf\044\uffbf\045\uffbf\052\uffbf\053\uffbf" +
    "\054\uffbf\055\uffbf\056\uffbf\057\uffbf\060\uffbf\061\uffbf\062" +
    "\uffbf\064\uffbf\065\uffbf\066\uffbf\067\uffbf\070\uffbf\071\uffbf" +
    "\074\uffbf\075\uffbf\076\uffbf\077\uffbf\100\uffbf\101\uffbf\102" +
    "\uffbf\103\uffbf\104\uffbf\001\002\000\134\002\uffc0\005\uffc0" +
    "\010\uffc0\011\uffc0\012\uffc0\014\uffc0\015\uffc0\017\uffc0\021" +
    "\uffc0\022\uffc0\023\uffc0\024\uffc0\025\uffc0\026\uffc0\027\uffc0" +
    "\030\uffc0\031\uffc0\032\uffc0\033\uffc0\044\uffc0\045\uffc0\052" +
    "\uffc0\053\uffc0\054\uffc0\055\uffc0\056\uffc0\057\uffc0\060\uffc0" +
    "\061\uffc0\062\uffc0\064\uffc0\065\uffc0\066\uffc0\067\uffc0\070" +
    "\uffc0\071\uffc0\074\uffc0\075\uffc0\076\uffc0\077\uffc0\100\uffc0" +
    "\101\uffc0\102\uffc0\103\uffc0\104\uffc0\001\002\000\134\002" +
    "\uffbe\005\uffbe\010\uffbe\011\uffbe\012\uffbe\014\uffbe\015\uffbe" +
    "\017\uffbe\021\uffbe\022\uffbe\023\uffbe\024\uffbe\025\uffbe\026" +
    "\uffbe\027\uffbe\030\uffbe\031\uffbe\032\uffbe\033\uffbe\044\uffbe" +
    "\045\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe\056\uffbe\057" +
    "\uffbe\060\uffbe\061\uffbe\062\uffbe\064\uffbe\065\uffbe\066\uffbe" +
    "\067\uffbe\070\uffbe\071\uffbe\074\uffbe\075\uffbe\076\uffbe\077" +
    "\uffbe\100\uffbe\101\uffbe\102\uffbe\103\uffbe\104\uffbe\001\002" +
    "\000\134\002\uffbb\005\uffbb\010\uffbb\011\uffbb\012\uffbb\014" +
    "\uffbb\015\uffbb\017\uffbb\021\uffbb\022\uffbb\023\uffbb\024\uffbb" +
    "\025\uffbb\026\uffbb\027\uffbb\030\uffbb\031\uffbb\032\uffbb\033" +
    "\uffbb\044\uffbb\045\uffbb\052\uffbb\053\uffbb\054\uffbb\055\uffbb" +
    "\056\uffbb\057\uffbb\060\uffbb\061\uffbb\062\uffbb\064\uffbb\065" +
    "\uffbb\066\uffbb\067\uffbb\070\uffbb\071\uffbb\074\uffbb\075\uffbb" +
    "\076\uffbb\077\uffbb\100\uffbb\101\uffbb\102\uffbb\103\uffbb\104" +
    "\uffbb\001\002\000\010\014\uffaf\044\uffaf\045\uffaf\001\002" +
    "\000\010\014\uffb7\044\uffb7\045\uffb7\001\002\000\010\014" +
    "\uffb8\044\uffb8\045\uffb8\001\002\000\010\014\uffb6\044\uffb6" +
    "\045\uffb6\001\002\000\006\014\uffab\064\uffab\001\002\000" +
    "\010\014\337\044\036\045\037\001\002\000\026\044\036" +
    "\045\037\052\072\053\071\054\077\055\076\056\100\060" +
    "\075\061\074\062\101\001\002\000\026\044\uffad\045\uffad" +
    "\052\uffad\053\uffad\054\uffad\055\uffad\056\uffad\060\uffad\061" +
    "\uffad\062\uffad\001\002\000\012\010\014\011\015\012\004" +
    "\014\272\001\002\000\026\044\uffac\045\uffac\052\uffac\053" +
    "\uffac\054\uffac\055\uffac\056\uffac\060\uffac\061\uffac\062\uffac" +
    "\001\002\000\006\014\uffa9\064\uffa9\001\002\000\132\005" +
    "\uffb9\010\uffb9\011\uffb9\012\uffb9\014\uffb9\015\uffb9\017\uffb9" +
    "\021\uffb9\022\uffb9\023\uffb9\024\uffb9\025\uffb9\026\uffb9\027" +
    "\uffb9\030\uffb9\031\uffb9\032\uffb9\033\uffb9\044\uffb9\045\uffb9" +
    "\052\uffb9\053\uffb9\054\uffb9\055\uffb9\056\uffb9\057\uffb9\060" +
    "\uffb9\061\uffb9\062\uffb9\064\uffb9\065\uffb9\066\uffb9\067\uffb9" +
    "\070\uffb9\071\uffb9\074\uffb9\075\uffb9\076\uffb9\077\uffb9\100" +
    "\uffb9\101\uffb9\102\uffb9\103\uffb9\104\uffb9\001\002\000\010" +
    "\014\uffb0\044\uffb0\045\uffb0\001\002\000\026\044\uffb2\045" +
    "\uffb2\052\uffb2\053\uffb2\054\uffb2\055\uffb2\056\uffb2\060\uffb2" +
    "\061\uffb2\062\uffb2\001\002\000\132\005\124\010\014\011" +
    "\015\012\004\014\130\015\144\017\013\021\012\022\053" +
    "\023\057\024\060\025\054\026\056\027\061\030\121\031" +
    "\142\032\146\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b" +
    "\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062" +
    "\uff8b\064\115\065\104\066\103\067\105\070\122\071\132" +
    "\074\117\075\131\076\116\077\102\100\141\101\111\102" +
    "\113\103\106\104\114\001\002\000\006\014\uffd6\015\uffd6" +
    "\001\002\000\010\014\uffb5\044\uffb5\045\uffb5\001\002\000" +
    "\006\014\uffd2\015\uffd2\001\002\000\006\014\uffd3\015\uffd3" +
    "\001\002\000\026\044\036\045\037\052\072\053\071\054" +
    "\077\055\076\056\100\060\075\061\074\062\101\001\002" +
    "\000\022\052\uff91\053\uff91\054\uff91\055\uff91\056\uff91\060" +
    "\uff91\061\uff91\062\uff91\001\002\000\006\044\uff8e\045\uff8e" +
    "\001\002\000\010\044\uff78\045\uff78\063\223\001\002\000" +
    "\026\044\uffb1\045\uffb1\052\uffb1\053\uffb1\054\uffb1\055\uffb1" +
    "\056\uffb1\060\uffb1\061\uffb1\062\uffb1\001\002\000\026\044" +
    "\uffb3\045\uffb3\052\uffb3\053\uffb3\054\uffb3\055\uffb3\056\uffb3" +
    "\060\uffb3\061\uffb3\062\uffb3\001\002\000\022\052\uff8f\053" +
    "\uff8f\054\uff8f\055\uff8f\056\uff8f\060\uff8f\061\uff8f\062\uff8f" +
    "\001\002\000\022\052\072\053\071\054\077\055\076\056" +
    "\100\060\075\061\074\062\101\001\002\000\132\005\124" +
    "\010\014\011\015\012\004\014\130\015\144\017\013\021" +
    "\012\022\053\023\057\024\060\025\054\026\056\027\061" +
    "\030\121\031\142\032\146\033\123\044\uffb4\045\uffb4\052" +
    "\uff8b\053\uff8b\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b" +
    "\061\uff8b\062\uff8b\064\115\065\104\066\103\067\105\070" +
    "\122\071\132\074\117\075\131\076\116\077\102\100\141" +
    "\101\111\102\113\103\106\104\114\001\002\000\022\052" +
    "\uff9a\053\uff9a\054\uff9a\055\uff9a\056\uff9a\060\uff9a\061\uff9a" +
    "\062\uff9a\001\002\000\006\014\213\015\214\001\002\000" +
    "\010\014\157\044\036\045\037\001\002\000\010\014\uffae" +
    "\044\uffae\045\uffae\001\002\000\006\014\uffd5\015\uffd5\001" +
    "\002\000\132\005\124\010\014\011\015\012\004\014\130" +
    "\015\144\017\013\021\012\022\053\023\057\024\060\025" +
    "\054\026\056\027\061\030\121\031\142\032\146\033\123" +
    "\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056" +
    "\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115\065\104" +
    "\066\103\067\105\070\122\071\132\074\117\075\131\076" +
    "\116\077\102\100\141\101\111\102\113\103\106\104\114" +
    "\001\002\000\014\005\124\030\121\031\142\032\146\033" +
    "\123\001\002\000\132\005\124\010\014\011\015\012\004" +
    "\014\130\015\144\017\013\021\012\022\053\023\057\024" +
    "\060\025\054\026\056\027\061\030\121\031\142\032\146" +
    "\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055" +
    "\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115" +
    "\065\104\066\103\067\105\070\122\071\132\074\117\075" +
    "\131\076\116\077\102\100\141\101\111\102\113\103\106" +
    "\104\114\001\002\000\006\014\uffd4\015\uffd4\001\002\000" +
    "\022\052\uff97\053\uff97\054\uff97\055\uff97\056\uff97\060\uff97" +
    "\061\uff97\062\uff97\001\002\000\004\015\153\001\002\000" +
    "\132\005\uff87\010\uff87\011\uff87\012\uff87\014\uff87\015\uff87" +
    "\017\uff87\021\uff87\022\uff87\023\uff87\024\uff87\025\uff87\026" +
    "\uff87\027\uff87\030\uff87\031\uff87\032\uff87\033\uff87\044\uff87" +
    "\045\uff87\052\uff87\053\uff87\054\uff87\055\uff87\056\uff87\057" +
    "\uff87\060\uff87\061\uff87\062\uff87\064\uff87\065\uff87\066\uff87" +
    "\067\uff87\070\uff87\071\uff87\074\uff87\075\uff87\076\uff87\077" +
    "\uff87\100\uff87\101\uff87\102\uff87\103\uff87\104\uff87\001\002" +
    "\000\132\005\uff86\010\uff86\011\uff86\012\uff86\014\uff86\015" +
    "\uff86\017\uff86\021\uff86\022\uff86\023\uff86\024\uff86\025\uff86" +
    "\026\uff86\027\uff86\030\uff86\031\uff86\032\uff86\033\uff86\044" +
    "\uff86\045\uff86\052\uff86\053\uff86\054\uff86\055\uff86\056\uff86" +
    "\057\uff86\060\uff86\061\uff86\062\uff86\064\uff86\065\uff86\066" +
    "\uff86\067\uff86\070\uff86\071\uff86\074\uff86\075\uff86\076\uff86" +
    "\077\uff86\100\uff86\101\uff86\102\uff86\103\uff86\104\uff86\001" +
    "\002\000\016\005\124\030\121\031\142\032\146\033\123" +
    "\064\155\001\002\000\132\005\uff85\010\uff85\011\uff85\012" +
    "\uff85\014\uff85\015\uff85\017\uff85\021\uff85\022\uff85\023\uff85" +
    "\024\uff85\025\uff85\026\uff85\027\uff85\030\uff85\031\uff85\032" +
    "\uff85\033\uff85\044\uff85\045\uff85\052\uff85\053\uff85\054\uff85" +
    "\055\uff85\056\uff85\057\uff85\060\uff85\061\uff85\062\uff85\064" +
    "\uff85\065\uff85\066\uff85\067\uff85\070\uff85\071\uff85\074\uff85" +
    "\075\uff85\076\uff85\077\uff85\100\uff85\101\uff85\102\uff85\103" +
    "\uff85\104\uff85\001\002\000\132\005\uff84\010\uff84\011\uff84" +
    "\012\uff84\014\uff84\015\uff84\017\uff84\021\uff84\022\uff84\023" +
    "\uff84\024\uff84\025\uff84\026\uff84\027\uff84\030\uff84\031\uff84" +
    "\032\uff84\033\uff84\044\uff84\045\uff84\052\uff84\053\uff84\054" +
    "\uff84\055\uff84\056\uff84\057\uff84\060\uff84\061\uff84\062\uff84" +
    "\064\uff84\065\uff84\066\uff84\067\uff84\070\uff84\071\uff84\074" +
    "\uff84\075\uff84\076\uff84\077\uff84\100\uff84\101\uff84\102\uff84" +
    "\103\uff84\104\uff84\001\002\000\022\052\uff99\053\uff99\054" +
    "\uff99\055\uff99\056\uff99\060\uff99\061\uff99\062\uff99\001\002" +
    "\000\004\073\uff8a\001\002\000\006\014\161\015\163\001" +
    "\002\000\016\005\uff81\014\uff81\030\uff81\031\uff81\032\uff81" +
    "\033\uff81\001\002\000\006\044\036\045\037\001\002\000" +
    "\016\005\uff83\014\uff83\030\uff83\031\uff83\032\uff83\033\uff83" +
    "\001\002\000\016\005\124\014\165\030\121\031\142\032" +
    "\146\033\123\001\002\000\006\044\uff78\045\uff78\001\002" +
    "\000\006\044\uff82\045\uff82\001\002\000\006\044\036\045" +
    "\037\001\002\000\004\015\171\001\002\000\006\044\uff77" +
    "\045\uff77\001\002\000\006\044\036\045\037\001\002\000" +
    "\022\052\072\053\071\054\077\055\076\056\100\060\075" +
    "\061\074\062\101\001\002\000\132\005\124\010\014\011" +
    "\015\012\004\014\130\015\144\017\013\021\012\022\053" +
    "\023\057\024\060\025\054\026\056\027\061\030\121\031" +
    "\142\032\146\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b" +
    "\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062" +
    "\uff8b\064\115\065\104\066\103\067\105\070\122\071\132" +
    "\074\117\075\131\076\116\077\102\100\141\101\111\102" +
    "\113\103\106\104\114\001\002\000\022\052\072\053\071" +
    "\054\077\055\076\056\100\060\075\061\074\062\101\001" +
    "\002\000\026\044\uff76\045\uff76\052\uff76\053\uff76\054\uff76" +
    "\055\uff76\056\uff76\060\uff76\061\uff76\062\uff76\001\002\000" +
    "\022\052\072\053\071\054\077\055\076\056\100\060\075" +
    "\061\074\062\101\001\002\000\010\076\116\077\102\100" +
    "\141\001\002\000\004\014\157\001\002\000\022\052\072" +
    "\053\071\054\077\055\076\056\100\060\075\061\074\062" +
    "\101\001\002\000\022\052\uff9e\053\uff9e\054\uff9e\055\uff9e" +
    "\056\uff9e\060\uff9e\061\uff9e\062\uff9e\001\002\000\016\005" +
    "\124\014\165\030\121\031\142\032\146\033\123\001\002" +
    "\000\006\044\uff80\045\uff80\001\002\000\004\073\207\001" +
    "\002\000\132\005\uff89\010\uff89\011\uff89\012\uff89\014\uff89" +
    "\015\uff89\017\uff89\021\uff89\022\uff89\023\uff89\024\uff89\025" +
    "\uff89\026\uff89\027\uff89\030\uff89\031\uff89\032\uff89\033\uff89" +
    "\044\uff89\045\uff89\052\uff89\053\uff89\054\uff89\055\uff89\056" +
    "\uff89\057\uff89\060\uff89\061\uff89\062\uff89\064\uff89\065\uff89" +
    "\066\uff89\067\uff89\070\uff89\071\uff89\074\uff89\075\uff89\076" +
    "\uff89\077\uff89\100\uff89\101\uff89\102\uff89\103\uff89\104\uff89" +
    "\001\002\000\132\005\124\010\014\011\015\012\004\014" +
    "\130\015\144\017\013\021\012\022\053\023\057\024\060" +
    "\025\054\026\056\027\061\030\121\031\142\032\146\033" +
    "\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b" +
    "\056\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115\065" +
    "\104\066\103\067\105\070\122\071\132\074\117\075\131" +
    "\076\116\077\102\100\141\101\111\102\113\103\106\104" +
    "\114\001\002\000\022\052\uff88\053\uff88\054\uff88\055\uff88" +
    "\056\uff88\060\uff88\061\uff88\062\uff88\001\002\000\026\044" +
    "\uff7f\045\uff7f\052\uff7f\053\uff7f\054\uff7f\055\uff7f\056\uff7f" +
    "\060\uff7f\061\uff7f\062\uff7f\001\002\000\042\005\uff7c\014" +
    "\uff7c\030\uff7c\031\uff7c\032\uff7c\033\uff7c\044\uff7a\045\uff7a" +
    "\052\uff7a\053\uff7a\054\uff7a\055\uff7a\056\uff7a\060\uff7a\061" +
    "\uff7a\062\uff7a\001\002\000\042\005\uff7e\014\uff7e\030\uff7e" +
    "\031\uff7e\032\uff7e\033\uff7e\044\uff79\045\uff79\052\uff79\053" +
    "\uff79\054\uff79\055\uff79\056\uff79\060\uff79\061\uff79\062\uff79" +
    "\001\002\000\016\005\124\014\165\030\121\031\142\032" +
    "\146\033\123\001\002\000\026\044\uff7d\045\uff7d\052\uff7d" +
    "\053\uff7d\054\uff7d\055\uff7d\056\uff7d\060\uff7d\061\uff7d\062" +
    "\uff7d\001\002\000\016\005\124\014\165\030\121\031\142" +
    "\032\146\033\123\001\002\000\026\044\uff7b\045\uff7b\052" +
    "\uff7b\053\uff7b\054\uff7b\055\uff7b\056\uff7b\060\uff7b\061\uff7b" +
    "\062\uff7b\001\002\000\022\052\uff96\053\uff96\054\uff96\055" +
    "\uff96\056\uff96\060\uff96\061\uff96\062\uff96\001\002\000\024" +
    "\002\uffa3\052\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\060" +
    "\uffa3\061\uffa3\062\uffa3\001\002\000\132\005\uffba\010\uffba" +
    "\011\uffba\012\uffba\014\uffba\015\uffba\017\uffba\021\uffba\022" +
    "\uffba\023\uffba\024\uffba\025\uffba\026\uffba\027\uffba\030\uffba" +
    "\031\uffba\032\uffba\033\uffba\044\uffba\045\uffba\052\uffba\053" +
    "\uffba\054\uffba\055\uffba\056\uffba\057\uffba\060\uffba\061\uffba" +
    "\062\uffba\064\uffba\065\uffba\066\uffba\067\uffba\070\uffba\071" +
    "\uffba\074\uffba\075\uffba\076\uffba\077\uffba\100\uffba\101\uffba" +
    "\102\uffba\103\uffba\104\uffba\001\002\000\006\044\036\045" +
    "\037\001\002\000\022\052\072\053\071\054\077\055\076" +
    "\056\100\060\075\061\074\062\101\001\002\000\004\014" +
    "\227\001\002\000\022\052\uff8d\053\uff8d\054\uff8d\055\uff8d" +
    "\056\uff8d\060\uff8d\061\uff8d\062\uff8d\001\002\000\022\052" +
    "\072\053\071\054\077\055\076\056\100\060\075\061\074" +
    "\062\101\001\002\000\006\044\036\045\037\001\002\000" +
    "\004\064\233\001\002\000\022\052\uff8c\053\uff8c\054\uff8c" +
    "\055\uff8c\056\uff8c\060\uff8c\061\uff8c\062\uff8c\001\002\000" +
    "\132\005\124\010\014\011\015\012\004\014\130\015\144" +
    "\017\013\021\012\022\053\023\057\024\060\025\054\026" +
    "\056\027\061\030\121\031\142\032\146\033\123\044\uffb4" +
    "\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056\uff8b\057" +
    "\127\060\uff8b\061\uff8b\062\uff8b\064\115\065\104\066\103" +
    "\067\105\070\122\071\132\074\117\075\131\076\116\077" +
    "\102\100\141\101\111\102\113\103\106\104\114\001\002" +
    "\000\004\014\236\001\002\000\026\036\uff95\037\uff95\040" +
    "\uff95\041\uff95\042\uff95\043\uff95\046\uff95\047\uff95\050\uff95" +
    "\051\uff95\001\002\000\026\036\252\037\251\040\250\041" +
    "\241\042\243\043\247\046\240\047\253\050\245\051\244" +
    "\001\002\000\004\014\uffc6\001\002\000\004\014\uffcc\001" +
    "\002\000\004\014\254\001\002\000\004\014\uffcb\001\002" +
    "\000\004\014\uffc3\001\002\000\004\014\uffc4\001\002\000" +
    "\004\014\uffc9\001\002\000\004\014\uffca\001\002\000\004" +
    "\014\uffcd\001\002\000\004\014\uffce\001\002\000\004\014" +
    "\uffcf\001\002\000\004\014\uffc5\001\002\000\006\044\uff94" +
    "\045\uff94\001\002\000\006\044\036\045\037\001\002\000" +
    "\022\052\072\053\071\054\077\055\076\056\100\060\075" +
    "\061\074\062\101\001\002\000\132\005\124\010\014\011" +
    "\015\012\004\014\130\015\144\017\013\021\012\022\053" +
    "\023\057\024\060\025\054\026\056\027\061\030\121\031" +
    "\142\032\146\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b" +
    "\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062" +
    "\uff8b\064\115\065\104\066\103\067\105\070\122\071\132" +
    "\074\117\075\131\076\116\077\102\100\141\101\111\102" +
    "\113\103\106\104\114\001\002\000\022\052\072\053\071" +
    "\054\077\055\076\056\100\060\075\061\074\062\101\001" +
    "\002\000\132\005\124\010\014\011\015\012\004\014\130" +
    "\015\144\017\013\021\012\022\053\023\057\024\060\025" +
    "\054\026\056\027\061\030\121\031\142\032\146\033\123" +
    "\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056" +
    "\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115\065\104" +
    "\066\103\067\105\070\122\071\132\074\117\075\131\076" +
    "\116\077\102\100\141\101\111\102\113\103\106\104\114" +
    "\001\002\000\022\052\uff93\053\uff93\054\uff93\055\uff93\056" +
    "\uff93\060\uff93\061\uff93\062\uff93\001\002\000\022\052\072" +
    "\053\071\054\077\055\076\056\100\060\075\061\074\062" +
    "\101\001\002\000\132\005\124\010\014\011\015\012\004" +
    "\014\130\015\144\017\013\021\012\022\053\023\057\024" +
    "\060\025\054\026\056\027\061\030\121\031\142\032\146" +
    "\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055" +
    "\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115" +
    "\065\104\066\103\067\105\070\122\071\132\074\117\075" +
    "\131\076\116\077\102\100\141\101\111\102\113\103\106" +
    "\104\114\001\002\000\022\052\uff92\053\uff92\054\uff92\055" +
    "\uff92\056\uff92\060\uff92\061\uff92\062\uff92\001\002\000\022" +
    "\052\uff90\053\uff90\054\uff90\055\uff90\056\uff90\060\uff90\061" +
    "\uff90\062\uff90\001\002\000\006\014\271\064\115\001\002" +
    "\000\132\005\uffa8\010\uffa8\011\uffa8\012\uffa8\014\uffa8\015" +
    "\uffa8\017\uffa8\021\uffa8\022\uffa8\023\uffa8\024\uffa8\025\uffa8" +
    "\026\uffa8\027\uffa8\030\uffa8\031\uffa8\032\uffa8\033\uffa8\044" +
    "\uffa8\045\uffa8\052\uffa8\053\uffa8\054\uffa8\055\uffa8\056\uffa8" +
    "\057\uffa8\060\uffa8\061\uffa8\062\uffa8\064\uffa8\065\uffa8\066" +
    "\uffa8\067\uffa8\070\uffa8\071\uffa8\074\uffa8\075\uffa8\076\uffa8" +
    "\077\uffa8\100\uffa8\101\uffa8\102\uffa8\103\uffa8\104\uffa8\001" +
    "\002\000\004\063\223\001\002\000\010\055\uffe2\063\uffdf" +
    "\064\300\001\002\000\132\005\124\010\014\011\015\012" +
    "\004\014\130\015\144\017\013\021\012\022\053\023\057" +
    "\024\060\025\054\026\056\027\061\030\121\031\142\032" +
    "\146\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b" +
    "\055\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064" +
    "\115\065\104\066\103\067\105\070\122\071\132\074\117" +
    "\075\131\076\116\077\102\100\141\101\111\102\113\103" +
    "\106\104\114\001\002\000\012\010\014\011\015\012\004" +
    "\014\272\001\002\000\132\005\uffdc\010\uffdc\011\uffdc\012" +
    "\uffdc\014\uffdc\015\uffdc\017\uffdc\021\uffdc\022\uffdc\023\uffdc" +
    "\024\uffdc\025\uffdc\026\uffdc\027\uffdc\030\uffdc\031\uffdc\032" +
    "\uffdc\033\uffdc\044\uffdc\045\uffdc\052\uffdc\053\uffdc\054\uffdc" +
    "\055\uffdc\056\uffdc\057\uffdc\060\uffdc\061\uffdc\062\uffdc\064" +
    "\uffdc\065\uffdc\066\uffdc\067\uffdc\070\uffdc\071\uffdc\074\uffdc" +
    "\075\uffdc\076\uffdc\077\uffdc\100\uffdc\101\uffdc\102\uffdc\103" +
    "\uffdc\104\uffdc\001\002\000\022\052\uff98\053\uff98\054\uff98" +
    "\055\uff98\056\uff98\060\uff98\061\uff98\062\uff98\001\002\000" +
    "\004\055\315\001\002\000\132\005\uffe3\010\uffe3\011\uffe3" +
    "\012\uffe3\014\uffe3\015\uffe3\017\uffe3\021\uffe3\022\uffe3\023" +
    "\uffe3\024\uffe3\025\uffe3\026\uffe3\027\uffe3\030\uffe3\031\uffe3" +
    "\032\uffe3\033\uffe3\044\uffe3\045\uffe3\052\uffe3\053\uffe3\054" +
    "\uffe3\055\uffe3\056\uffe3\057\uffe3\060\uffe3\061\uffe3\062\uffe3" +
    "\064\uffe3\065\uffe3\066\uffe3\067\uffe3\070\uffe3\071\uffe3\074" +
    "\uffe3\075\uffe3\076\uffe3\077\uffe3\100\uffe3\101\uffe3\102\uffe3" +
    "\103\uffe3\104\uffe3\001\002\000\004\063\302\001\002\000" +
    "\132\005\uffde\010\uffde\011\uffde\012\uffde\014\uffde\015\uffde" +
    "\017\uffde\021\uffde\022\uffde\023\uffde\024\uffde\025\uffde\026" +
    "\uffde\027\uffde\030\uffde\031\uffde\032\uffde\033\uffde\044\uffde" +
    "\045\uffde\052\uffde\053\uffde\054\uffde\055\uffde\056\uffde\057" +
    "\uffde\060\uffde\061\uffde\062\uffde\064\uffde\065\uffde\066\uffde" +
    "\067\uffde\070\uffde\071\uffde\074\uffde\075\uffde\076\uffde\077" +
    "\uffde\100\uffde\101\uffde\102\uffde\103\uffde\104\uffde\001\002" +
    "\000\132\005\uffd7\010\uffd7\011\uffd7\012\uffd7\014\uffd7\015" +
    "\uffd7\017\uffd7\021\uffd7\022\uffd7\023\uffd7\024\uffd7\025\uffd7" +
    "\026\uffd7\027\uffd7\030\uffd7\031\uffd7\032\uffd7\033\uffd7\044" +
    "\uffd7\045\uffd7\052\uffd7\053\uffd7\054\uffd7\055\uffd7\056\uffd7" +
    "\057\uffd7\060\uffd7\061\uffd7\062\uffd7\064\uffd7\065\uffd7\066" +
    "\uffd7\067\305\070\uffd7\071\uffd7\074\uffd7\075\uffd7\076\uffd7" +
    "\077\uffd7\100\uffd7\101\uffd7\102\uffd7\103\uffd7\104\uffd7\001" +
    "\002\000\132\005\uffdd\010\uffdd\011\uffdd\012\uffdd\014\uffdd" +
    "\015\uffdd\017\uffdd\021\uffdd\022\uffdd\023\uffdd\024\uffdd\025" +
    "\uffdd\026\uffdd\027\uffdd\030\uffdd\031\uffdd\032\uffdd\033\uffdd" +
    "\044\uffdd\045\uffdd\052\uffdd\053\uffdd\054\uffdd\055\uffdd\056" +
    "\uffdd\057\uffdd\060\uffdd\061\uffdd\062\uffdd\064\uffdd\065\uffdd" +
    "\066\uffdd\067\uffdd\070\uffdd\071\uffdd\074\uffdd\075\uffdd\076" +
    "\uffdd\077\uffdd\100\uffdd\101\uffdd\102\uffdd\103\uffdd\104\uffdd" +
    "\001\002\000\004\020\uffdb\001\002\000\004\020\307\001" +
    "\002\000\006\044\uffda\045\uffda\001\002\000\006\044\036" +
    "\045\037\001\002\000\004\014\312\001\002\000\006\044" +
    "\uffd9\045\uffd9\001\002\000\006\044\036\045\037\001\002" +
    "\000\132\005\uffd8\010\uffd8\011\uffd8\012\uffd8\014\uffd8\015" +
    "\uffd8\017\uffd8\021\uffd8\022\uffd8\023\uffd8\024\uffd8\025\uffd8" +
    "\026\uffd8\027\uffd8\030\uffd8\031\uffd8\032\uffd8\033\uffd8\044" +
    "\uffd8\045\uffd8\052\uffd8\053\uffd8\054\uffd8\055\uffd8\056\uffd8" +
    "\057\uffd8\060\uffd8\061\uffd8\062\uffd8\064\uffd8\065\uffd8\066" +
    "\uffd8\067\uffd8\070\uffd8\071\uffd8\074\uffd8\075\uffd8\076\uffd8" +
    "\077\uffd8\100\uffd8\101\uffd8\102\uffd8\103\uffd8\104\uffd8\001" +
    "\002\000\012\010\uffe1\011\uffe1\012\uffe1\014\uffe1\001\002" +
    "\000\012\010\014\011\015\012\004\014\272\001\002\000" +
    "\132\005\uffe0\010\uffe0\011\uffe0\012\uffe0\014\uffe0\015\uffe0" +
    "\017\uffe0\021\uffe0\022\uffe0\023\uffe0\024\uffe0\025\uffe0\026" +
    "\uffe0\027\uffe0\030\uffe0\031\uffe0\032\uffe0\033\uffe0\044\uffe0" +
    "\045\uffe0\052\uffe0\053\uffe0\054\uffe0\055\uffe0\056\uffe0\057" +
    "\uffe0\060\uffe0\061\uffe0\062\uffe0\064\uffe0\065\uffe0\066\uffe0" +
    "\067\uffe0\070\uffe0\071\uffe0\074\uffe0\075\uffe0\076\uffe0\077" +
    "\uffe0\100\uffe0\101\uffe0\102\uffe0\103\uffe0\104\uffe0\001\002" +
    "\000\132\005\124\010\014\011\015\012\004\014\130\015" +
    "\144\017\013\021\012\022\053\023\057\024\060\025\054" +
    "\026\056\027\061\030\121\031\142\032\146\033\123\044" +
    "\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056\uff8b" +
    "\057\127\060\uff8b\061\uff8b\062\uff8b\064\115\065\104\066" +
    "\103\067\105\070\122\071\132\074\117\075\131\076\116" +
    "\077\102\100\141\101\111\102\113\103\106\104\114\001" +
    "\002\000\004\014\322\001\002\000\026\036\uffa2\037\uffa2" +
    "\040\uffa2\041\uffa2\042\uffa2\043\uffa2\046\uffa2\047\uffa2\050" +
    "\uffa2\051\uffa2\001\002\000\026\036\252\037\251\040\250" +
    "\041\241\042\243\043\247\046\240\047\253\050\245\051" +
    "\244\001\002\000\004\014\325\001\002\000\006\044\uffa1" +
    "\045\uffa1\001\002\000\006\044\036\045\037\001\002\000" +
    "\022\052\072\053\071\054\077\055\076\056\100\060\075" +
    "\061\074\062\101\001\002\000\132\005\124\010\014\011" +
    "\015\012\004\014\130\015\144\017\013\021\012\022\053" +
    "\023\057\024\060\025\054\026\056\027\061\030\121\031" +
    "\142\032\146\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b" +
    "\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062" +
    "\uff8b\064\115\065\104\066\103\067\105\070\122\071\132" +
    "\074\117\075\131\076\116\077\102\100\141\101\111\102" +
    "\113\103\106\104\114\001\002\000\022\052\072\053\071" +
    "\054\077\055\076\056\100\060\075\061\074\062\101\001" +
    "\002\000\132\005\124\010\014\011\015\012\004\014\130" +
    "\015\144\017\013\021\012\022\053\023\057\024\060\025" +
    "\054\026\056\027\061\030\121\031\142\032\146\033\123" +
    "\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055\uff8b\056" +
    "\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115\065\104" +
    "\066\103\067\105\070\122\071\132\074\117\075\131\076" +
    "\116\077\102\100\141\101\111\102\113\103\106\104\114" +
    "\001\002\000\022\052\uffa0\053\uffa0\054\uffa0\055\uffa0\056" +
    "\uffa0\060\uffa0\061\uffa0\062\uffa0\001\002\000\022\052\072" +
    "\053\071\054\077\055\076\056\100\060\075\061\074\062" +
    "\101\001\002\000\132\005\124\010\014\011\015\012\004" +
    "\014\130\015\144\017\013\021\012\022\053\023\057\024" +
    "\060\025\054\026\056\027\061\030\121\031\142\032\146" +
    "\033\123\044\uffb4\045\uffb4\052\uff8b\053\uff8b\054\uff8b\055" +
    "\uff8b\056\uff8b\057\127\060\uff8b\061\uff8b\062\uff8b\064\115" +
    "\065\104\066\103\067\105\070\122\071\132\074\117\075" +
    "\131\076\116\077\102\100\141\101\111\102\113\103\106" +
    "\104\114\001\002\000\022\052\uff9f\053\uff9f\054\uff9f\055" +
    "\uff9f\056\uff9f\060\uff9f\061\uff9f\062\uff9f\001\002\000\022" +
    "\052\uff9b\053\uff9b\054\uff9b\055\uff9b\056\uff9b\060\uff9b\061" +
    "\uff9b\062\uff9b\001\002\000\004\014\341\001\002\000\006" +
    "\044\uff9d\045\uff9d\001\002\000\006\044\036\045\037\001" +
    "\002\000\006\014\271\064\115\001\002\000\022\052\uff9c" +
    "\053\uff9c\054\uff9c\055\uff9c\056\uff9c\060\uff9c\061\uff9c\062" +
    "\uff9c\001\002\000\006\014\271\064\115\001\002\000\132" +
    "\005\uffaa\010\uffaa\011\uffaa\012\uffaa\014\uffaa\015\uffaa\017" +
    "\uffaa\021\uffaa\022\uffaa\023\uffaa\024\uffaa\025\uffaa\026\uffaa" +
    "\027\uffaa\030\uffaa\031\uffaa\032\uffaa\033\uffaa\044\uffaa\045" +
    "\uffaa\052\uffaa\053\uffaa\054\uffaa\055\uffaa\056\uffaa\057\uffaa" +
    "\060\uffaa\061\uffaa\062\uffaa\064\uffaa\065\uffaa\066\uffaa\067" +
    "\uffaa\070\uffaa\071\uffaa\074\uffaa\075\uffaa\076\uffaa\077\uffaa" +
    "\100\uffaa\101\uffaa\102\uffaa\103\uffaa\104\uffaa\001\002\000" +
    "\006\013\uffa7\016\uffa7\001\002\000\006\013\064\016\062" +
    "\001\002\000\004\014\352\001\002\000\022\052\uffa6\053" +
    "\uffa6\054\uffa6\055\uffa6\056\uffa6\060\uffa6\061\uffa6\062\uffa6" +
    "\001\002\000\022\052\072\053\071\054\077\055\076\056" +
    "\100\060\075\061\074\062\101\001\002\000\132\005\124" +
    "\010\014\011\015\012\004\014\130\015\144\017\013\021" +
    "\012\022\053\023\057\024\060\025\054\026\056\027\061" +
    "\030\121\031\142\032\146\033\123\044\uffb4\045\uffb4\052" +
    "\uff8b\053\uff8b\054\uff8b\055\uff8b\056\uff8b\057\127\060\uff8b" +
    "\061\uff8b\062\uff8b\064\115\065\104\066\103\067\105\070" +
    "\122\071\132\074\117\075\131\076\116\077\102\100\141" +
    "\101\111\102\113\103\106\104\114\001\002\000\022\052" +
    "\072\053\071\054\077\055\076\056\100\060\075\061\074" +
    "\062\101\001\002\000\024\002\uffa5\052\uffa5\053\uffa5\054" +
    "\uffa5\055\uffa5\056\uffa5\060\uffa5\061\uffa5\062\uffa5\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\354\000\012\002\010\003\007\017\006\032\004\001" +
    "\001\000\002\001\001\000\006\020\062\033\054\001\001" +
    "\000\004\042\034\001\001\000\012\002\033\003\007\017" +
    "\006\032\004\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\041\020\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\050\025" +
    "\051\024\001\001\000\004\047\022\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\041\023\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\041\026\001\001\000" +
    "\002\001\001\000\004\052\030\001\001\000\004\041\031" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\043\041\001\001\000" +
    "\002\001\001\000\004\044\043\001\001\000\002\001\001" +
    "\000\004\045\045\001\001\000\004\025\046\001\001\000" +
    "\002\001\001\000\004\046\050\001\001\000\012\002\051" +
    "\003\007\017\006\032\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\066\065\001\001\000\004\025\066\001\001\000" +
    "\004\025\067\001\001\000\004\027\072\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\003\135\004\133\005" +
    "\132\012\125\014\144\017\142\020\111\023\136\030\117" +
    "\031\106\032\004\034\107\035\137\036\124\037\134\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\062\344\001\001\000\004\025\337\001" +
    "\001\000\006\025\320\027\317\001\001\000\002\001\001" +
    "\000\006\021\272\032\273\001\001\000\002\001\001\000" +
    "\004\063\266\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\040\003\135\004\265\005\132\012" +
    "\125\014\144\017\142\020\111\023\136\030\117\031\106" +
    "\032\004\034\107\035\137\036\124\037\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\025\234\027\233\001\001\000\002\001" +
    "\001\000\004\074\223\001\001\000\004\104\166\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\221\001\001\000\040\003\135\004\220\005\132" +
    "\012\125\014\144\017\142\020\111\023\136\030\117\031" +
    "\106\032\004\034\107\035\137\036\124\037\134\001\001" +
    "\000\002\001\001\000\004\013\211\001\001\000\004\025" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\003\135\004\155\005\132\012\125\014\144\017\142\020" +
    "\111\023\136\030\117\031\106\032\004\034\107\035\137" +
    "\036\124\037\134\001\001\000\006\010\150\023\147\001" +
    "\001\000\040\003\135\004\146\005\132\012\125\014\144" +
    "\017\142\020\111\023\136\030\117\031\106\032\004\034" +
    "\107\035\137\036\124\037\134\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\151\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\010\153\023\147\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\076\205\001\001\000\004\016\161\001\001\000\004" +
    "\101\203\001\001\000\004\025\176\001\001\000\004\100" +
    "\163\001\001\000\006\012\165\023\136\001\001\000\004" +
    "\104\166\001\001\000\002\001\001\000\004\025\167\001" +
    "\001\000\002\001\001\000\004\105\171\001\001\000\004" +
    "\025\172\001\001\000\004\027\173\001\001\000\040\003" +
    "\135\004\174\005\132\012\125\014\144\017\142\020\111" +
    "\023\136\030\117\031\106\032\004\034\107\035\137\036" +
    "\124\037\134\001\001\000\004\027\175\001\001\000\002" +
    "\001\001\000\004\027\177\001\001\000\006\005\201\035" +
    "\200\001\001\000\002\001\001\000\004\027\202\001\001" +
    "\000\002\001\001\000\006\012\204\023\136\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\077\207\001\001" +
    "\000\040\003\135\004\210\005\132\012\125\014\144\017" +
    "\142\020\111\023\136\030\117\031\106\032\004\034\107" +
    "\035\137\036\124\037\134\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\103\216\001\001\000\004\102\214" +
    "\001\001\000\006\012\215\023\136\001\001\000\002\001" +
    "\001\000\006\012\217\023\136\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\224\001\001\000\004\027\225\001\001\000\002" +
    "\001\001\000\004\075\227\001\001\000\004\027\230\001" +
    "\001\000\004\025\231\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\003\135\004\262\005\132\012\125\014" +
    "\144\017\142\020\111\023\136\030\117\031\106\032\004" +
    "\034\107\035\137\036\124\037\134\001\001\000\002\001" +
    "\001\000\004\072\236\001\001\000\006\024\241\026\245" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\073\254\001\001\000\004\025\255\001\001\000\004\027" +
    "\256\001\001\000\040\003\135\004\257\005\132\012\125" +
    "\014\144\017\142\020\111\023\136\030\117\031\106\032" +
    "\004\034\107\035\137\036\124\037\134\001\001\000\004" +
    "\027\260\001\001\000\040\003\135\004\261\005\132\012" +
    "\125\014\144\017\142\020\111\023\136\030\117\031\106" +
    "\032\004\034\107\035\137\036\124\037\134\001\001\000" +
    "\002\001\001\000\004\027\263\001\001\000\040\003\135" +
    "\004\264\005\132\012\125\014\144\017\142\020\111\023" +
    "\136\030\117\031\106\032\004\034\107\035\137\036\124" +
    "\037\134\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\030\267\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\053\276\055\300\001\001\000\040\003\135\004" +
    "\275\005\132\012\125\014\144\017\142\020\111\023\136" +
    "\030\117\031\106\032\004\034\107\035\137\036\124\037" +
    "\134\001\001\000\006\021\274\032\273\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\302\001\001\000\004" +
    "\040\303\001\001\000\002\001\001\000\004\057\305\001" +
    "\001\000\002\001\001\000\004\060\307\001\001\000\004" +
    "\025\310\001\001\000\002\001\001\000\004\061\312\001" +
    "\001\000\004\025\313\001\001\000\002\001\001\000\004" +
    "\054\315\001\001\000\006\021\316\032\273\001\001\000" +
    "\002\001\001\000\040\003\135\004\333\005\132\012\125" +
    "\014\144\017\142\020\111\023\136\030\117\031\106\032" +
    "\004\034\107\035\137\036\124\037\134\001\001\000\002" +
    "\001\001\000\004\067\322\001\001\000\006\024\323\026" +
    "\245\001\001\000\002\001\001\000\004\070\325\001\001" +
    "\000\004\025\326\001\001\000\004\027\327\001\001\000" +
    "\040\003\135\004\330\005\132\012\125\014\144\017\142" +
    "\020\111\023\136\030\117\031\106\032\004\034\107\035" +
    "\137\036\124\037\134\001\001\000\004\027\331\001\001" +
    "\000\040\003\135\004\332\005\132\012\125\014\144\017" +
    "\142\020\111\023\136\030\117\031\106\032\004\034\107" +
    "\035\137\036\124\037\134\001\001\000\002\001\001\000" +
    "\004\027\334\001\001\000\040\003\135\004\335\005\132" +
    "\012\125\014\144\017\142\020\111\023\136\030\117\031" +
    "\106\032\004\034\107\035\137\036\124\037\134\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\071\341\001\001\000\004\025\342\001\001\000\004" +
    "\030\343\001\001\000\002\001\001\000\004\030\345\001" +
    "\001\000\002\001\001\000\004\064\347\001\001\000\004" +
    "\033\350\001\001\000\002\001\001\000\004\065\352\001" +
    "\001\000\004\027\353\001\001\000\040\003\135\004\354" +
    "\005\132\012\125\014\144\017\142\020\111\023\136\030" +
    "\117\031\106\032\004\034\107\035\137\036\124\037\134" +
    "\001\001\000\004\027\355\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParseCodigo$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParseCodigo$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParseCodigo$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



/**Metodo al que se llama automáticamente ante algún error sintactico.*/
public void syntax_error(Symbol s){
System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ " Identificador " +s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperación de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ParseCodigo$actions {


/*
public static Stack pilaCodigo= new Stack();
public static Stack erroresCodigo= new Stack();
public static Stack programa= new Stack();

*/
public void datos(Object copiado){
programa.push(copiado);

}


  private final ParseCodigo parser;

  /** Constructor */
  CUP$ParseCodigo$actions(ParseCodigo parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ParseCodigo$do_action(
    int                        CUP$ParseCodigo$act_num,
    java_cup.runtime.lr_parser CUP$ParseCodigo$parser,
    java.util.Stack            CUP$ParseCodigo$stack,
    int                        CUP$ParseCodigo$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParseCodigo$result;

      /* select the action based on the action number */
      switch (CUP$ParseCodigo$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Linea8 ::= Tk_name NT$34 LineaAgrupa Tk_Puntos NT$35 LineaAgrupa LineaGen Linea2 LineaGen 
            {
              Object RESULT =null;
              // propagate RESULT from NT$35
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea8",8, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // NT$35 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$35",67, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // NT$34 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$34",66, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Linea9 ::= Tk_Puntos 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea9",9, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Linea9 ::= Tk_name 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea9",9, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Linea9 ::= Tk_name NT$33 Linea8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$33
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea9",9, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // NT$33 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$33",65, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Linea9 ::= Tk_Puntos NT$32 Linea8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$32
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea9",9, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // NT$32 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$32",64, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Linea8 ::= LineaOpera Linea9 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea8",8, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Operaciones2 ::= Tk_name NT$31 Linea8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$31
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Operaciones2",12, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // NT$31 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$31",63, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Operaciones2 ::= Tk_Puntos NT$30 Linea8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$30
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Operaciones2",12, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // NT$30 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$30",62, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Linea7 ::= Tk_Puntos Tk_puntoComa 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea7",7, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Linea7 ::= Tk_Puntos Linea6 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea7",7, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Linea6 ::= LineaOpera Linea7 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea6",6, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Operaciones ::= Tk_Puntos Linea6 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Operaciones",10, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Linea3 ::= LineaSenteCaso Tk_name NT$28 Tk_Dosp NT$29 Linea2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$29
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea3",3, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // NT$29 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$29",61, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // NT$28 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$28",60, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Linea2 ::= 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Linea2 ::= Tk_print NT$26 LineaAgrupa LineaGen Tk_name NT$27 LineaGen LineaAgrupa Tk_puntoComa 
            {
              Object RESULT =null;
              // propagate RESULT from NT$27
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(c);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // NT$27 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$27",59, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // NT$26 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$26",58, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Linea2 ::= Linea3 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Linea2 ::= LineaAsig Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Linea2 ::= Linea8 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Linea2 ::= LineaSenteMien LineaGen Linea2 LineaGen Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Linea2 ::= LineaSenteMien LineaAgrupa Tk_name NT$24 LineaRela Tk_name NT$25 LineaAgrupa LineaGen Linea2 LineaGen Linea2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$25
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-11)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NT$25 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$25",57, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // NT$24 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$24",56, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Linea2 ::= LineaSenteConti Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Linea2 ::= Operaciones Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Linea2 ::= LineaVar LineaVar1 Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Linea2 ::= LineaComen Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Linea2 ::= Linea1 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Linea2 ::= LineaMetod Tk_name 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Linea2 ::= LineaMetod LineaAgrupa Tk_name NT$23 LineaAgrupa LineaAsig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // NT$23 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$23",55, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Linea2 ::= LineaSenteCaso LineaAgrupa Operaciones2 LineaAgrupa LineaGen Linea3 LineaGen 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Linea2 ::= LineaSenteSi LineaGen Linea2 LineaGen Linea2 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Linea2 ::= LineaSenteSi LineaAgrupa Tk_name NT$21 LineaRela Tk_name NT$22 LineaAgrupa LineaGen Linea2 LineaGen Linea2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$22
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea2",2, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-11)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NT$22 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$22",54, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // NT$21 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$21",53, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Linea1 ::= LineaVisi LineaVar Tk_name NT$20 LineaAgrupa LineaAgrupa LineaGen Linea2 LineaGen 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-6)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea1",1, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-8)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // NT$20 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$20",52, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Linea1 ::= LineaVisi LineaCyH Tk_name NT$18 LineaCyH Tk_name NT$19 LineaGen Linea2 LineaGen 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		JOptionPane.showMessageDialog(null, "Copilacion Exitosa ", "Copilacion", JOptionPane.WARNING_MESSAGE);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea1",1, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // NT$19 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$19",51, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // NT$18 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$18",50, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // LineaSenteConti ::= Tk_Exit NT$17 LineaAsig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$17
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteConti",29, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$17 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$17",49, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // LineaSenteConti ::= TK_Continuar NT$16 LineaAsig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteConti",29, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$16 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$16",48, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // LineaSenteMien ::= Tk_Hacer 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteMien",28, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // LineaSenteMien ::= Tk_Mientras 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteMien",28, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // LineaSenteCaso ::= Tk_Defec 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteCaso",27, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // LineaSenteCaso ::= Tk_Caso 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteCaso",27, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // LineaSenteCaso ::= Tk_Inter 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteCaso",27, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // LineaSenteSi ::= Tk_SiNo 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteSi",26, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // LineaSenteSi ::= Tk_SiNoSi 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteSi",26, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // LineaSenteSi ::= Tk_Si 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaSenteSi",26, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // LineaMetod ::= 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaMetod",23, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // LineaMetod ::= Tk_Firts 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaMetod",23, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // LineaMetod ::= Tk_new 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaMetod",23, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // LineaMetod ::= Tk_Over 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaMetod",23, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // LineaMetod ::= Tk_Super 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaMetod",23, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // LineaAsig ::= Tk_puntoComa 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaAsig",22, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // LineaAsig ::= Tk_name Tk_Asig 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaAsig",22, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // LineaGen ::= Tk_false 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // LineaGen ::= Tk_true 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // LineaGen ::= Tk_mientras 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // LineaGen ::= Tk_Igual 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // LineaGen ::= Tk_Coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // LineaGen ::= Tk_Close 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // LineaGen ::= Tk_Open 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // LineaGen ::= Tk_Comillas 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaGen",21, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // LineaLog ::= Tk_And 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaLog",20, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // LineaLog ::= Tk_xOr 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaLog",20, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // LineaLog ::= Tk_Or 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaLog",20, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // LineaLog ::= Tk_Not 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaLog",20, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // LineaAgrupa ::= Tk_Cerrar 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaAgrupa",19, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // LineaAgrupa ::= Tk_Abrir 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaAgrupa",19, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // LineaRela ::= LineaLog 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // LineaRela ::= Tk_dif 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // LineaRela ::= Tk_igualIgual 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // LineaRela ::= Tk_menorq 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // LineaRela ::= Tk_mayorq 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // LineaRela ::= Tk_menor 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // LineaRela ::= Tk_mayor 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaRela",18, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // LineaConta ::= Tk_name Tk_minus Tk_puntoComa 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(c);datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaConta",16, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // LineaConta ::= Tk_name Tk_plus Tk_puntoComa 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(c);datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaConta",16, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // LineaOpera ::= Tk_multi 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaOpera",17, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // LineaOpera ::= Tk_pote 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaOpera",17, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // LineaOpera ::= Tk_div 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaOpera",17, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // LineaOpera ::= Tk_resta 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaOpera",17, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // LineaOpera ::= Tk_suma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaOpera",17, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // LineaVar2 ::= 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar2",30, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // LineaVar2 ::= Tk_new NT$13 Tk_Comentario NT$14 LineaAgrupa Tk_name NT$15 LineaAgrupa 
            {
              Object RESULT =null;
              // propagate RESULT from NT$15
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar2",30, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$15 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$15",47, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$14 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(c);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$14",46, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // NT$13 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$13",45, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // LineaVar1 ::= LineaVisi LineaVar1 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar1",15, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // LineaVar1 ::= Tk_name NT$11 Tk_Asig NT$12 LineaVar2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar1",15, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NT$12 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$12",44, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // NT$11 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$11",43, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // LineaVar1 ::= Tk_name NT$9 Tk_Coma NT$10 LineaVar1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar1",15, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$10 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$10",42, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // NT$9 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$9",41, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // LineaVar1 ::= Tk_name Tk_puntoComa 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar1",15, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // LineaVar ::= Tk_void 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // LineaVar ::= Tk_char 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // LineaVar ::= Tk_int 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // LineaVar ::= Tk_bool 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // LineaVar ::= Tk_double 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // LineaVar ::= Tk_string 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVar",14, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // LineaComen2 ::= 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen2",31, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // LineaComen2 ::= Tk_multi NT$7 Tk_name NT$8 LineaComen2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen2",31, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$8",40, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NT$7 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$7",39, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // LineaComen2 ::= Tk_multi NT$6 LineaComen2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen2",31, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NT$6 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$6",38, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // LineaComen2 ::= Tk_Comentario NT$5 LineaComen2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen2",31, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$5 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$5",37, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // LineaComen ::= Tk_OpenC LineaComen2 Tk_CloseC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(c);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen",13, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // LineaComen ::= Tk_DobleB Tk_Comentario 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(a);datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaComen",13, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // LineaCyH ::= Tk_clase 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaCyH",25, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // LineaCyH ::= Tk_heredar 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaCyH",25, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LineaVisi ::= Tk_protect 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVisi",24, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LineaVisi ::= Tk_private 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVisi",24, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // LineaVisi ::= Tk_public 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
		datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("LineaVisi",24, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Linea0 ::= LineaComen Linea0 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Linea0 ::= Linea1 
            {
              Object RESULT =null;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Linea0 ::= Tk_import NT$0 LineaAgrupa Tk_Comillas NT$1 Tk_name NT$2 Tk_Comillas NT$3 LineaAgrupa Tk_puntoComa NT$4 Linea0 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-12)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-12)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-12)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-9)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;

              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("Linea0",0, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-12)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$4 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-10)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-10)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-10)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(e);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$4",36, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // NT$3 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-7)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(c);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$3",35, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NT$2 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-5)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(b);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$2",34, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-3)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(a);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$1",33, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.peek()).value;
datos(t);
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("NT$0",32, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          return CUP$ParseCodigo$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Linea0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)).value;
		RESULT = start_val;
              CUP$ParseCodigo$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.elementAt(CUP$ParseCodigo$top-1)), ((java_cup.runtime.Symbol)CUP$ParseCodigo$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParseCodigo$parser.done_parsing();
          return CUP$ParseCodigo$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

